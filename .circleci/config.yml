# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/deep-track-staging
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run: go get -v -t -d ...
      #- run: go test -v ...
  deploy:
    working_directory: /go/src/deep-track-staging
    docker:
      - image: google/cloud-sdk

    steps:
      - checkout

      - run:
          name: Set PATH to .bashrc
          command: |
            echo 'export PATH=$HOME/go/bin:$HOME/go_appengine:$PATH' >> $BASH_ENV
            source /home/circleci/.bashrc

      - run:
          name: Install appengine sdk
          command: |
            wget https://storage.googleapis.com/appengine-sdks/featured/go_appengine_sdk_linux_amd64-1.9.70.zip
            unzip go_appengine_sdk_linux_amd64-1.9.70.zip -d $HOME

      - run:
          name: Deploy to Google App Engine
          command: |
            echo "$GCLOUD_SERVICE_ACCOUNT_KEY" | base64 -i --decode > "$HOME/gcp-key.json"
            gcloud auth activate_service_account --key-file "$HOME/gcp-key.json"
            appcfg.py update --no_cookies --oauth2_access_token $(gcloud auth print-access-token 2> /dev/null) -A $GCLOUD_PROJECT -V ./app/app-engine.yaml
            gcloud --quiet config set project "$GCLOUD_PROJECT"
            goapp deploy --version $GCLOUD_PROJECT_VERSION app/app-engine.yaml

workflows:
  version: 2
  workflow:
    jobs:
    - build
    - deploy
