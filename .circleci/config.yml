# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    environment:
      TZ: /usr/share/zoneinfo/Asia/Tokyo  # Time Zoneを指定
    working_directory: /go/src/deep-track-staging
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      - run:
          name: Set PATH to .bashrc
          command: |
            echo 'export PATH=$HOME/go/bin:$HOME/go_appengine:$PATH' >> $BASH_ENV
            source /home/circleci/.bashrc
      - run:
          name: Install appengine sdk
          command: |
            wget https://storage.googleapis.com/appengine-sdks/featured/go_appengine_sdk_linux_amd64-1.9.70.zip
            unzip go_appengine_sdk_linux_amd64-1.9.70.zip -d $HOME
      # ここでテストをやります
      - run:
          name: Google Authentication
          command: |
            if [ -n "${GCLOUD_SERVICE_KEY}" -a -n "${GCLOUD_PROJECT}" ]; then
              echo ${GCLOUD_SERVICE_KEY} > ${HOME}/gcloud-service-key.json
              echo "export GOOGLE_APPLICATION_CREDENTIALS=\"${HOME}/gcloud-service-key.json\"" >> $BASH_ENV
            else
              echo "Not set environment"
              exit 1
            fi
      - run:
          name: Authentication 2
          command: appcfg.py --noauth_local_webserver -A ${GGLOUD_PROJECT} update app
      - run:
          name: Deploy to GAE
          command: goapp deploy -oauth -application ${GCLOUD_PROJECT} -version ${GCLOUD_PROJECT_VERSION} app/app.yaml
